html, body {
    margin: 0; padding:0;
    overflow-x: hidden; 
   
scroll-behavior: smooth;
background-color:#202428;
}

:root {
      --menu-speed: 0.3s;
      --menu-ease: cubic-bezier(0.4, 0, 0.2, 1);
      --side-width: 260px;
      --safe-left: max(1rem, env(safe-area-inset-left));
      --safe-right: max(1rem, env(safe-area-inset-right));
      --safe-top: env(safe-area-inset-top, 0);
    }

    html { scrollbar-gutter: stable; }
    body.menu-open { overflow: hidden; touch-action: none; }

    /* ----------------- Top Navbar ----------------- */
    #topNavbar {
      position: sticky;
      top: 0;
      width: 100%;
      z-index: 1052;
      transition: transform var(--menu-speed) var(--menu-ease);
      background-color: red;
    
    }
    #topNavbar.hide { transform: translateY(-100%); }

    /* ----------------- Side Menu ----------------- */
    .side-menu {
      position: fixed;
      top: 0; left: 0;
      width: var(--side-width);
      height: 100%;
      background: #000;
      color: white;
      transform: translateX(-100%);
      transition: transform 0.4s ease;
      z-index: 1055;

      display: flex;
      flex-direction: column;
      padding-top: calc(70px + var(--safe-top));
      padding-left: var(--safe-left);
      padding-right: var(--safe-right);

      overflow-y: auto;
      scrollbar-width: thin;
      scrollbar-color: rgba(255,255,255,0.3) transparent;
    }
    .side-menu.show { transform: translateX(0); }

    /* Chrome scrollbar */
    .side-menu::-webkit-scrollbar { width: 6px; }
    .side-menu::-webkit-scrollbar-thumb { background: rgba(255,255,255,0.3); border-radius: 3px; }
    .side-menu::-webkit-scrollbar-track { background: transparent; }

    /* ----------------- Overlay ----------------- */
    #overlay {
      position: fixed; inset: 0;
      background: rgba(0,0,0,0.5);
      opacity: 0; visibility: hidden;
      transition: opacity var(--menu-speed) var(--menu-ease);
      z-index: 1050;
    }
    #overlay.show { opacity: 1; visibility: visible; }

    /* ----------------- Side Links ----------------- */
    .side-link, .accordion-toggle {
      display: block;
      width: 100%;
      color: #fff;
      padding: 0.75rem 0;
      text-decoration: none;
      transition: 0.2s;
      font-weight: 500;
      border-radius: 6px;
      background: transparent;
      border: none;
      text-align: start;
    }
    .side-link:hover,
    .accordion-toggle:hover {  background: rgba(255,255,255,0.1);
  padding-left: 1rem; padding-right: 1rem;      /* slight extra padding */
  transform: translateX(4px); /* slide to the right */ }

    .side-sublink {
      display: block;
      color: #ccc;
      padding: 0.5rem 0;
      text-decoration: none;
      transition: 0.2s;
    }
    .side-sublink:hover { color: white; }

    /* ----------------- Accordion ----------------- */
    .accordion-content {
      max-height: 0;
      overflow: hidden;
      transition: max-height 0.35s ease;
      padding-left: 1rem;
    }
    .accordion-item.open .accordion-content { max-height: 500px; }

    /* Visual cue for accordion open */
    .accordion-toggle::after {
      content: "+";
      float: right;
    }
    .accordion-item.open .accordion-toggle::after {
      content: "âˆ’";
    }

    /* ----------------- Containers & Footer ----------------- */
    .container-xxl {
      padding-left: var(--safe-left);
      padding-right: var(--safe-right);
    }
    footer {
      background: #000;
      color: white;
      padding: 2rem 0;
      margin-top: 3rem;
    }

    @media (min-width: 992px) { .navbar-toggler { display: none; } }






/* Optional: Hover effect */
.tel:hover {
  text-decoration: underline;
}

* {
  box-sizing: border-box;
}

   .h-divider {
        width: 100%;
        height: 3rem;
        background-color: rgba(0, 0, 0, .1);
        border: solid rgba(0, 0, 0, .15);
        border-width: 1px 0;
        box-shadow: inset 0 .5em 1.5em rgba(0, 0, 0, .1), inset 0 .125em .5em rgba(0, 0, 0, .15);
      }


.hexagon-line {
    display: grid; /* Use grid for more control over placement */
    grid-template-columns: repeat(auto-fill, minmax(100px, 1fr)); /* Automatically fill rows with hexagons */
    grid-auto-rows: calc(100px * 1.1); /* Set the row height to match hexagon height (86.6% of width) */
    grid-auto-flow: dense; /* Fill in the grid densely to avoid gaps */
    
    width: 100vw; /* Full viewport width */
    box-sizing: border-box; /* Include padding and borders in the element's total width and height */
    row-gap: 5px; /* Add gap between rows (height-based gap only) */

}

.hex, .hex-alt {
    width: 100px; /* Fixed width for hexagon */
    height: calc(100px * 1.1); /* Height for hexagonal shape */
    background-color: #89CFF0; /* Hexagon color */
    clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%); /* Hexagon shape */
    opacity: 0; /* Initially hidden */
    transition: opacity 0.5s ease; /* Fade transition */
}

.hex.show, .hex-alt.show {
    opacity: 1; /* Fully visible when shown */
}

.hex-alt {
    background-color: #89CFF0; /* Alternate color */
}

.glow {
    box-shadow: 0 0 20px rgba(52, 152, 219, 0.7), 0 0 30px rgba(52, 152, 219, 0.5);
    animation: glow-animation 1.5s infinite alternate;
}

@keyframes glow-animation {
    from {
        opacity: 1;
    }
    to {
        opacity: 0.6;
    }
}


/* Mobile adjustment: Limit rows to 2 on smaller screens */
@media (max-width: 600px) {
    .hexagon-line {
        max-height: calc((100px * 1.1 + 5px) * 2); /* Limit to 2 rows, including row gap */
        overflow: hidden; /* Hide excess hexagons */
    }
}


/* Optional: Hover effect */
.tel:hover {
  text-decoration: underline;
}

* {
  box-sizing: border-box;
}

:root {
  --silver: #c0c0c0;
  --light-shadow: #77571d;
  --dark-shadow: #3e2904;
}






.overlay {
    opacity: 0; /* Start as invisible */
    transition: opacity 1s ease; /* Smooth fade-in effect */
}

.overlay.show {
    opacity: 1; /* Fully visible when the 'show' class is added */
}


/* h1, .top-picinner h2, .wte, .wte3, .dark { text-shadow: 1px 1px 1px #000; -webkit-text-stroke: 1px; -webkit-font-smoothing: antialiased; font-size:26px; text-align:center; margin-top:20px;
} */

.heading-style {
  text-shadow: 1px 1px 1px #000;
  -webkit-text-stroke: 1px;
  -webkit-font-smoothing: antialiased;
  font-size: 26px;
  text-align: center;
  margin-top: 20px;
}


.spacer2 { height:20px; clear:both; }


    .robot {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 38px;
        height: 52px;
        opacity: 0;
        transition: opacity 1s ease-in-out;
    }

    .robot.fade-out {
        opacity: 0;
    }

    .robot {
        opacity: 1;
    }

    .hex img, .hex-alt img {
        pointer-events: none;
    }

.bg { display: flex; /* Use Flexbox for centering */
    flex-direction: column; /* Stack the text vertically */
    justify-content: center; /* Center vertically */
    align-items: center; /* Center horizontally */
    background-color: rgba(0, 0, 0, 0.5); /* Transparent dark background */
    color: white; /* Ensure text is readable */
    padding: 2rem; /* Add spacing inside the div */
    border-radius: 8px; /* Optional: Rounded corners */
    width: 100%; /* Ensure it spans full width */
    max-width: 800px; /* Optional: Limit width for better layout */
    margin: 0 auto; /* Center the div on the page */
    text-align: center; /* Center-align text */ }


/* anchor overlay to this container */
.hex-container { position: relative; width: 100%; }

/* give the grid an explicit height (was inline before) */
.hexagon-line { height: 460px; }
@media (max-width: 600px) { .hexagon-line { height: 240px; } }

/* hex cells must be positioning contexts for the robot image */
.hex, .hex-alt { position: relative; overflow: hidden; }

/* center the overlay over the grid */
.overlay {
  position: absolute;
  inset: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: max(1rem, env(safe-area-inset-top))
           max(1rem, env(safe-area-inset-right))
           max(1rem, env(safe-area-inset-bottom))
           max(1rem, env(safe-area-inset-left));
  z-index: 2;
  pointer-events: none;
  opacity: 0;                     /* you already had this */
  transition: opacity 1s ease;    /* you already had this */
}
.overlay.show { opacity: 1; }
.overlay .bg { pointer-events: auto; }

.icon-small {
  font-size: 0.9rem; // small size
  color: #4f7fff; // your starting color
  transition: color 0.25s ease;

  &:hover {
    color: #ffd54f; // highlight color on hover
  }
}